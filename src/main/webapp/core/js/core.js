$(function() {	/**	 * 尾部以0补全	 */	$.sets_appendZero = function(n, pos) {		n = '' + n;		if (n.length < pos) {			n = n + '0'.repeat(pos - n.length);		}		return n;	}	/**	 * 	 */	$.sets_prettyTime = function(seconds) {		if (isNaN(seconds)) {			return 0;		}		var hour = parseInt(seconds / 3600);		seconds = seconds - hour * 3600;		var minute = parseInt(seconds / 60);		seconds = seconds - minute * 60;		var result = (hour > 0 ? (hour + '小时') : '') + (minute > 0 ? (minute + '分钟') : '')				+ (seconds > 0 ? (seconds + '秒') : '');		return result == '' ? 0 : result;	};	/**	 * 格式化时间戳	 * <p>	 * precise: 精确度(year, month, day, hour, minute, second)	 */	$.sets_formatTime = function(timeStamp,precise,defaultVal) {		if (!isNaN(timeStamp * 1) && timeStamp * 1 > 0) {			timeStamp = $.sets_appendZero(timeStamp, 13) * 1;			var currT = new Date();			currT.setTime(timeStamp);			var fmt = '';			precise = precise || 'second';			switch (precise) {			case 'second':				fmt = ':' + ((currT.getSeconds() + '').length == 2 ? currT.getSeconds() : ('0' + currT.getSeconds()));			case 'minute':				fmt = ':' + ((currT.getMinutes() + '').length == 2 ? currT.getMinutes() : ('0' + currT.getMinutes()))						+ fmt;			case 'hour':				fmt = ' ' + ((currT.getHours() + '').length == 2 ? currT.getHours() : ('0' + currT.getHours())) + fmt;			case 'day':				fmt = '-' + ((currT.getDate() + '').length == 2 ? currT.getDate() : ('0' + currT.getDate())) + fmt;			case 'month':				fmt = '-'						+ ((currT.getMonth() + 1 + '').length == 2 ? (currT.getMonth() + 1)								: ('0' + (currT.getMonth() + 1))) + fmt;			case 'year':				fmt = currT.getFullYear() + fmt;			}			return fmt;		} else {			return defaultVal || '----------------------------';		}	}	/**	 * 基于jQuery Ajax进行封装	 * 	 * @param opts.url	 *            请求路径	 * @param opts.data	 *            请求数据 JSON对象或字符串	 * @param opts.type	 *            请求方式 GET POST...	 * @param opts.contentType	 *            如果为"application/json",那么请求opts.data 为JSON字符串	 * @param opts.beforeSend	 * @param opts.success	 * @param opts.error	 * @param opts.complete	 * @param opts.session	 *            是否需要会话有效,默认为true	 * 	 * 	 */	$.setsAjax = function(opts) {		opts.type = opts.type || 'post';		opts.session = opts.session || true;		var headers = {};		if (opts.session) {			headers['x-request-type'] = 'ajax';		}		opts.contentType = opts.contentType || 'application/x-www-form-urlencoded';		$.ajax({			url : opts.url,			data : opts.data,			timeout : 60000,			type : opts.type,			dataType : 'json',			contentType : opts.contentType,			headers : headers,			beforeSend : function(XMLHttpRequest) {				if (opts.beforeSend) {					opts.beforeSend(XMLHttpRequest);				}			},			success : function(data, textStatus) {				if (data.code == 13) { // session失效了					// 弹出登录框					$.loginWindow({						action : 1					});				}else{					// 成功返回					if (opts.success) {						opts.success(data, textStatus);					}				}			},			error : function(errors, textStatus) {				if ('timeout' == textStatus) {					// 超时				}				if (opts.error) {					opts.error();				}			},			complete : function(XMLHttpRequest, textStatus) {				if (opts.complete) {					opts.complete(XMLHttpRequest, textStatus);				}			}		});	};	/**	 * @param action	 *            登录成功后的动作 1:自动消失 2:刷新当前页面 3: 跳转到指定的url(配合actionUrl)	 * @param actionUrl	 *            登录成功后需要跳转的url(当action=3时有效)	 * 	 */	$.loginWindow = function(opts) {		$("#loginmodal").data("loginWindow",opts);		$("#loginmodal .close").remove();		// 1.弹出登录模态窗口		$("#loginmodalbody").load(root+"/sets/page/login");    	$("#loginmodal").modal({    		backdrop: 'static'    	});	};});